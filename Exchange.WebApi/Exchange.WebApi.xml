<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Exchange.WebApi</name>
    </assembly>
    <members>
        <member name="T:Exchange.WebApi.Controllers.ExchangeUserController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Exchange.WebApi.Controllers.ExchangeUserController.#ctor(Exchange.Domain.ExchangeUser.Service.IExchangeUserReadService,Exchange.Domain.ExchangeUser.Service.IExchangeUserWriteService)">
            <summary>
            
            </summary>
            <param name="userReadService"></param>
            <param name="userWriteService"></param>
        </member>
        <member name="M:Exchange.WebApi.Controllers.ExchangeUserController.Get(System.Int32)">
            <summary>
            Gets the Exchange User with the given Id
            </summary>
            <param name="id">User Id to get</param>
            <returns></returns>
        </member>
        <member name="M:Exchange.WebApi.Controllers.ExchangeUserController.GetAll(Exchange.Domain.ExchangeUser.Query.FindUsersWithPagingQuery)">
            <summary>
            
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Exchange.WebApi.Controllers.ExchangeUserController.Create(Exchange.Domain.ExchangeUser.Command.CreateExchangeUserCommand)">
            <summary>
            Creates an Exchange User
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="T:Exchange.WebApi.Controllers.ItemsController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Exchange.WebApi.Controllers.ItemsController.#ctor(Exchange.Domain.Item.Service.IItemWriteService,Exchange.Domain.Item.Service.IItemReadService)">
            <summary>
            
            </summary>
            <param name="itemWriteService"></param>
            <param name="itemReadService"></param>
        </member>
        <member name="M:Exchange.WebApi.Controllers.ItemsController.Get(System.Int32)">
            <summary>
            Gets the item with the given Id
            </summary>
            <param name="id">Item Id to get</param>
            <returns></returns>
        </member>
        <member name="M:Exchange.WebApi.Controllers.ItemsController.GetAll(Exchange.Domain.Item.Query.FindItemsWithPagingQuery)">
            <summary>
            
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Exchange.WebApi.Controllers.ItemsController.Create(Exchange.Domain.Item.Command.CreateItemCommand)">
            <summary>
            Creates an Item
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Exchange.WebApi.Controllers.ItemsController.Update(Exchange.Domain.Item.Command.UpdateItemCommand)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="T:Exchange.WebApi.Controllers.TokenController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Exchange.WebApi.Controllers.TokenController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:Exchange.WebApi.Controllers.TokenController.GetToken(Exchange.Domain.Common.Command.CreateTokenCommand)">
            <summary>
            
            </summary>
            <param name="tokenCommand"></param>
            <returns></returns>
        </member>
        <member name="T:Exchange.WebApi.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:Exchange.WebApi.Program.Main(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Exchange.WebApi.Program.CreateHostBuilder(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Exchange.WebApi.Startup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Exchange.WebApi.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:Exchange.WebApi.Startup.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:Exchange.WebApi.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Exchange.WebApi.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
